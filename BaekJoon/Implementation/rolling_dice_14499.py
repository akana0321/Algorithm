"""
    주사위 굴리기(https://www.acmicpc.net/problem/14499)
     - N x M 지도가 존재, 지도의 오른쪽은 동쪽, 위는 북쪽
     - 지도의 좌표는 (r, c)로 나타내며, r은 북쪽으로 부터 떨어진 칸의 개수, c는 서쪽으로부터 떨어진 칸의 개수
     - 주사위는 지도 위에 윗면이 1이고, 동쪽을 마라보는 방향이 3인 상태로 놓여져 있으며,
        놓여져 있는 곳의 좌표는 (x, y), 가장 처음에 주사위에는 모든 면에 0이 적혀있다.
     - 지도 각각의 칸에는 정수가 하나씩 쓰여져 있음. 주사위를 굴렸을 때, 이동한 칸에 쓰여 있는 수가 0이면,
        주사위의 바닥면에 쓰여 있는 수가 칸에 복사된다.
        0이 아닌 경우에는 칸에 쓰여 있는 수가 주사위 바닥면으로 복사되며, 칸에 쓰여 있는 수는 0이 된다
     - 주사위를 놓은 곳의 좌표와 이동시키는 명령이 주어졌을 때, 주사위가 이동했을 때 마다 상단에 쓰여 있는 값을 구하라
     - 주사위는 지도 바깥으로 이동시킬 수 없음, 만약 바깥으로 이동시키려고 하는 경우에는 해당 명령을 무시해야 하며, 출력도 하면 안된다
     - 입력 : 지도의 세로 크기 N, 가로 크기 M(1 <= N, M <= 20), 주사위를 놓은 곳의 좌표 x y(0 <= x <= N-1, 0 <= y <= M- 1),
                그리고 명령의 개수 K(1 <= K <= 1,000)
             이후 지도에 쓰여 있는 수가 북쪽부터 남쪽으로, 각 줄은 서쪽부터 동쪽 순서대로 주어진다
               주사위를 놓은 칸에 쓰여 있는 수는 항상 0, 지도의 각 칸에 쓰여 있는 수는 10 미만의 자연수 또는 0이다
             마지막 줄에는 이동하는 명령이 순서대로 주어짐. 동쪽은 1, 서쪽은 2, 북쪽은 3, 남쪽은 4
     - 출력 : 이동할 때마다 주사위의 윗 면에 쓰여 있는 수를 출력.
             만약 바깥으로 이동시키려고 하는 경우에는 해당 멸령을 무시해야 하며, 출력도 하면 안된다.

      * 참고 - https://jeongchul.tistory.com/669
"""
from sys import stdin

N, M, x, y, K = map(int, stdin.readline().split())
board = [list(map(int, stdin.readline().split())) for _ in range(N)]
commands = list(map(int, stdin.readline().split()))

dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]

dice = [0] * 6  # 주사위의 처음 값
temp = [0] * 6  # 주사위의 값을 임시적으로 저장

# 주사위의 현재 인덱스 정하기
direction = [
    (2, 0, 5, 3, 4, 1),  # 동쪽
    (1, 5, 0, 3, 4, 2),  # 서쪽
    (4, 1, 2, 0, 5, 3),  # 북쪽
    (3, 1, 2, 5, 0, 4)   # 남쪽
]

for command in commands:
    command -= 1
    x, y = x + dx[command], y + dy[command] # 움직이는 x, y좌표를 구함
    if x < 0 or x >= N or y < 0 or y >= M:  # 맵보다 커지지 않도록 제한
        x, y = x - dx[command], y - dy[command]
        continue # 명령 무시, 출력 안함
    for idx in range(6): # 임시값으로 현재 주사위값 저장
        temp[idx] = dice[idx]
    for idx in range(6): # 방향 회전에 따른 주사위값 저장
        dice[idx] = temp[direction[command][idx]]
    if board[x][y]: # 지도의 칸에 값이 있다면
        dice[5] = board[x][y] # 바닥면에 칸의 값을 넣고
        board[x][y] = 0 # 칸은 0으로 업데이트
    else:
        board[x][y] = dice[5] # 칸이 0이라면, 주사위의 값을 넣음
    print(dice[0]) # 주사위의 바닥면을 출력