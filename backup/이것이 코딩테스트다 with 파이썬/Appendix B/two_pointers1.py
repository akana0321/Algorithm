'''
    투 포인터 알고리즘은 리스트에 순차적으로 접근해야 할 때 2개의 점의 위치를 기록하면서 처리하는 알고리즘이다
    리스트에 담긴 데이터에 순차적으로 접근해야 할 때는 '시작점'과 '끝점' 2개의 점으로 접근
    <방법>
        1. 시작점(start)과 끝점(end)이 첫 번째 원소의 인덱스(0)를 가리키도록 한다
        2. 현재 부분합이 M(특정한 부분합)과 같다면 카운트를 한다
        3. 현재 부분합이 M보다 작으면 end를 1 증가시킨다
        4. 현재 부분합이 M보다 크거나 같으면 start를 1 증가시킨다
        5. 모든 경우를 확인할 때까지 2~4번까지의 과정을 반복한다.
    기본적으로 시작점을 오른쪽으로 이동시키면 항상 합이 감소하고, 끝점을 오른쪽으로 이동시키면 항상 합이 증가
    만약 리스트 내 원소에 음수 데이터가 포함되는 경우에는 투 포인터 알고리즘으로 문제를 해결할 수 없다
'''

n = 5 # 데이터의 개수 N
m = 5 # 찾고자 하는 부분합 M
data = [1, 2, 3, 2, 5] # 전체 수열

count = 0
interval_sum = 0
end = 0

# start를 차례대로 증가시키며 반복
for start in range(n):
    # end를 가능한 만큼 이동시키기
    while interval_sum < m and end < n:
        interval_sum += data[end]
        end += 1
    # 부분합이 m일 때 카운트 증가
    if interval_sum == m:
        count += 1
    interval_sum -= data[start]


print(count)
