'''
    에라토스테네스의 체는 여러 개의 수가 소수인지 아닌지를 판별할 때 사용하는 대표적인 알고리즘
    <방법>
        1. 2부터 N까지의 모든 자연수를 나열한다
        2. 남은 수 중에서 아직 처리하지 않은 가장 작은 수 i를 찾는다
        3. 남은 수 중에서 i의 배수를 모두 제거한다(i는 제거하지 않는다)
        4. 더 이상 반복할 수 없을 때까지 2, 3의 과정을 반복한다
    매 스텝마다 남은 수 중에서 아직 처리하지 않은 가장 작은 수 i를 찾는다고 하였으나, 이 때 i는
    N의 제곱근(가운데 약수)까지만 증가시켜 확인하면 된다.
    그리고 가끔씩 문제에서 1이 소수인지 판별해야 하도록 입력 조건이 주어질 수 있는데, 1은 소수가
    아니므로 그런 경우에는 다음 소스코드에 array[1]의 값으로 False를 넣어주는 부분을 추가하면 된다.
'''

import math

n = 1000 # 2부터 1000까지의 모든 수에 대하여 소수 판별
array = [True for i in range(n + 1)] # 처음엔 모든 수가 소수(True)인 것으로 초기화(0과 1은 제외)

# 에라토스테네스의 체 알고리즘
for i in range(2, int(math.sqrt(n)) + 1): # 2부터 n의 제곱근까지의 모든 수를 확인하며
    if array[i] == True: # i가 소수인 경우(남은 수인 경우)
        # i를 제외한 i의 모든 배수를 지우기
        j = 2
        while i * j <= n:
            array[i * j] = False
            j += 1

# 모든 소수 출력
for i in range(2, n + 1):
    if array[i]:
        print(i, end=' ')